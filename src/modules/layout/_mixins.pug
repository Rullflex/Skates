include widgets/_menu
include widgets/_slider

//- POPUP BASE

mixin popup
	.popup.uk-modal(data-uk-modal)&attributes(attributes)
		.popup__body.uk-modal-dialog.uk-margin-auto-vertical
			button.popup__close.uk-modal-close-default(type="button" data-uk-close)
			block

mixin popup-video-16-9
	.popup-video.popup.uk-modal(data-uk-modal)&attributes(attributes)
		.popup__body.uk-modal-dialog.uk-margin-auto-vertical.embed-responsive.embed-responsive-16by9
			button.popup__close.uk-modal-close-default(type="button" data-uk-close)
			block

mixin quiz 
	.quiz 

		h1.title TITLE

		ul.quiz-items 
			li
				h2 item 1
				ul.quiz-radios
					li
					li
					li

			li
				h2 item 2
				ul.quiz-options
					li
					li
					li
			li
				h2 item 3
				input.quiz-input
		ul.quiz-nav 
		a.quiz-prev(href="#") PREV
		a.quiz-next(href="#") NEXT
		
		progress.quiz-progress.uk-progress(value="0" max="100")

//- ICONSET

mixin icon(icon, filler = 'currentColor')
	case icon
		when 'gift'
			svg(viewbox='0 0 29 30' fill='none' xmlns='http://www.w3.org/2000/svg')&attributes(attributes)
				path(d='M27 7.45312H21.8109C22.2891 6.70078 22.5703 5.80781 22.5703 4.85156C22.5703 2.17617 20.3941 0 17.7188 0C16.2633 0 14.952 0.646875 14.0625 1.66641C13.173 0.646875 11.8617 0 10.4062 0C7.73086 0 5.55469 2.17617 5.55469 4.85156C5.55469 5.80781 5.83242 6.70078 6.31406 7.45312H1.125C0.502734 7.45312 0 7.95586 0 8.57812V15.6094C0 15.7641 0.126562 15.8906 0.28125 15.8906H1.6875V27.9844C1.6875 28.6066 2.19023 29.1094 2.8125 29.1094H25.3125C25.9348 29.1094 26.4375 28.6066 26.4375 27.9844V15.8906H27.8438C27.9984 15.8906 28.125 15.7641 28.125 15.6094V8.57812C28.125 7.95586 27.6223 7.45312 27 7.45312ZM15.2578 4.85156C15.2578 3.49453 16.3617 2.39062 17.7188 2.39062C19.0758 2.39062 20.1797 3.49453 20.1797 4.85156C20.1797 6.20859 19.0758 7.3125 17.7188 7.3125H15.2578V4.85156ZM10.4062 2.39062C11.7633 2.39062 12.8672 3.49453 12.8672 4.85156V7.3125H10.4062C9.04922 7.3125 7.94531 6.20859 7.94531 4.85156C7.94531 3.49453 9.04922 2.39062 10.4062 2.39062ZM2.39062 13.5V9.84375H12.8672V13.5H2.39062ZM4.07812 15.8906H12.8672V26.7188H4.07812V15.8906ZM24.0469 26.7188H15.2578V15.8906H24.0469V26.7188ZM25.7344 13.5H15.2578V9.84375H25.7344V13.5Z' fill='currentColor')

		

//- PICTURE

//- type: `jpg`/ `png` or jpg/ png if so-called var exsist
	src: `${path}/to/img`  - without postfixes and dimensions
	dimentions: `s`/ `sml`/ `sl`/ `smlx`/ `sx`....
	retina: true/ false

	Атрибуты типа class, alt записываются как обычно в скобках сразу за миксином  --> +picture(jpg, 'tmp')(class="pic" alt="lev")

	Называть картинку так --> any-name-sm.jpg / any-name-lg@2x.png

- var jpg = `jpg`, png = `png`, svg = `svg` //- для удобства

-
	var breakpointsLetterCollation = {
		'S': 'xs',
		's': 'sm',
		'm': 'md',
		'l': 'lg',
		'L': 'xl',
		'x': 'xxl',
	}

mixin picture(type, imageName, dimentions, retinaDimentions)
	- imageName = assets + imageName
	+picture-constructor(type, imagePlaceholder, imageName, dimentions, retinaDimentions, true, false)&attributes(attributes)

mixin picture-min(type, imageName, dimentions, retinaDimentions)
	- imageName = assets + imageName
	+picture-constructor(type, `${imageName}-min`, imageName, dimentions, retinaDimentions, true, true)&attributes(attributes)


mixin picture-constructor(imageExtension, imageSrc = imagePlaceholder, imageDataSrc, breakpointsLetters = '', retinaLetters = '', includeWebp = true, usePreloadImage = false)
		picture
			-
				function getImageSrc(dimention) {
					return (usePreloadImage && imageSrc !== imagePlaceholder) ? `${imageSrc}${dimention ? `-${dimention}` : ''}.${imageExtension}` : imagePlaceholder
				}			


			- const reversedBreakpointsLetters = breakpointsLetters.split('').reverse().join('')

			each letter in reversedBreakpointsLetters
				- const dimention = breakpointsLetterCollation[letter]

				-
					const sourceParameters = [
						breakpoints[dimention],
						getImageSrc(dimention),
						`${imageDataSrc}-${dimention}`,
						imageExtension,
						retinaLetters.includes(letter) ? true : false,
						includeWebp
					]

				+picture-source(...sourceParameters)

			else
				+picture-source(0, getImageSrc(), imageDataSrc, imageExtension, retinaLetters ? true : false, includeWebp)

			if breakpointsLetters
				- const imgDimention = breakpointsLetterCollation[reversedBreakpointsLetters[0]]

				img(src!=getImageSrc(imgDimention) data-src!=`${imageDataSrc}-${imgDimention}.${imageExtension}` alt='' class=`lazyload`)&attributes(attributes)

			else
				img(src!=getImageSrc() data-src!=`${imageDataSrc}` alt='' class=`lazyload`)&attributes(attributes)


mixin picture-source(media = 0, srcset, dataSrcsetBase, type, useRetina = false, includeWebp = false)
	- const postfixRetina = '@2x'

	if includeWebp === true && (type === 'jpg' || type === 'png')
		if useRetina
			source(media=`(min-width: ${media}px)` srcset!=srcset data-srcset!=`${dataSrcsetBase}${postfixRetina}.webp 2x, ${dataSrcsetBase}.webp 1x` type=`image/webp`)
		else
			source(media=`(min-width: ${media}px)` srcset!=srcset data-srcset!=`${dataSrcsetBase}.webp` type=`image/webp`)

	if useRetina
		source(media=`(min-width: ${media}px)` srcset!=srcset data-srcset!=`${dataSrcsetBase}${postfixRetina}.${type} 2x, ${dataSrcsetBase}.${type} 1x` type=`image/${type}`)
	else
		source(media=`(min-width: ${media}px)` srcset!=srcset data-srcset!=`${dataSrcsetBase}.${type}` type=`image/${type}`)
